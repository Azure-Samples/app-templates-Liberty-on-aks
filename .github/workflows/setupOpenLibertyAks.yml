name: Setup OpenLiberty on AKS

on:
  workflow_dispatch:
    inputs:
      disambiguationSuffix:
        description: 'Included in names to disambiguate. Get from another pipeline execution'
        required: true
      region:
        description: 'Azure region for resources'
        required: true
        default: eastus
  repository_dispatch:

env:
    refArmttk: c11a62d4ae011ee96fdecc76d76d811c5b5a99ce
    refJavaee: b728442f1921282f5f3902fe5bdf7f4d2c7872ca
    azCliVersion: 2.40.0
    azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
    location: ${{ github.event.inputs.region }}
    resourceGroupForOpenLibertyAks: ol-aks-${{ github.event.inputs.disambiguationSuffix }}-${{ github.run_number }}
    aksRepoUserName: WASdev
    aksRepoBranchName: b37f5abcb3085ed4220287abe9f76fbda67ebe3e

jobs:
    preflight:
        runs-on: ubuntu-latest
        steps:
        - name: Set up bicep
          run: |
            curl -Lo bicep https://github.com/Azure/bicep/releases/download/v0.11.1/bicep-linux-x64
            chmod +x ./bicep
            sudo mv ./bicep /usr/local/bin/bicep
            bicep --version
        - name: Checkout azure-javaee-iaas
          uses: actions/checkout@v2
          with:
            repository: Azure/azure-javaee-iaas
            path: azure-javaee-iaas
            ref: ${{ env.refJavaee }}
        - name: Checkout arm-ttk
          uses: actions/checkout@v2
          with:
            repository: Azure/arm-ttk
            path: arm-ttk
            ref: ${{ env.refArmttk }}
        - name: Checkout ${{ env.aksRepoUserName }}/azure.liberty.aks
          uses: actions/checkout@v2
          with:
            repository: ${{ env.aksRepoUserName }}/azure.liberty.aks
            path: azure.liberty.aks
            ref: ${{ env.aksRepoBranchName }}
        - name: Set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - name: Build azure-javaee-iaas
          run: mvn clean install --file azure-javaee-iaas/pom.xml

        - name: Build and test ${{ env.aksRepoUserName }}/azure.liberty.aks
          run: |
            cd azure.liberty.aks
            mvn -Pbicep -Ddev -Passembly -Ptemplate-validation-tests clean install
        - name: Generate artifact file name and path
          id: artifact_file
          run: |
            version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' azure.liberty.aks/pom.xml)
            artifactName=azure.liberty.aks-$version-arm-assembly
            unzip azure.liberty.aks/target/$artifactName.zip -d azure.liberty.aks/target/$artifactName
            echo "##[set-output name=artifactName;]${artifactName}"
            echo "##[set-output name=artifactPath;]azure.liberty.aks/target/$artifactName"
        - name: Archive azure.liberty.aks template
          uses: actions/upload-artifact@v1
          if: success()
          with:
            name: ${{steps.artifact_file.outputs.artifactName}}
            path: ${{steps.artifact_file.outputs.artifactPath}}
             
    deploy-openliberty-on-aks:
        needs: preflight
        runs-on: ubuntu-latest
        steps:
            - name: Checkout ${{ env.aksRepoUserName }}/azure.liberty.aks
              uses: actions/checkout@v2
              with:
                repository: ${{ env.aksRepoUserName }}/azure.liberty.aks
                path: azure.liberty.aks
                ref: ${{ env.aksRepoBranchName }}
            - name: Get version information from azure.liberty.aks/pom.xml
              id: version
              run: |
                version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' azure.liberty.aks/pom.xml)
                echo "version=${version}" >> $GITHUB_ENV
            - name: Output artifact name for Download action
              id: artifact_file
              run: |
                artifactName=azure.liberty.aks-$version-arm-assembly
                echo "artifactName=${artifactName}" >> $GITHUB_ENV
                echo "##[set-output name=artifactName;]${artifactName}"
            - name: Download artifact for deployment
              uses: actions/download-artifact@v1
              with:
                name: ${{steps.artifact_file.outputs.artifactName}}
            - uses: azure/login@v1
              id: azure-login
              with:
                creds: ${{ env.azureCredentials }}
            - name: Create Resource Group
              uses: azure/CLI@v1
              with:
                azcliversion: ${{ env.azCliVersion }}
                inlineScript: |
                    echo "create resource group" ${{ env.resourceGroupForOpenLibertyAks }}
                    az group create --verbose --name ${{ env.resourceGroupForOpenLibertyAks }} --location ${{ env.location }}
            - name: Checkout cargotracker
              uses: actions/checkout@v2
              with:
                path: cargotracker
            - name: Prepare parameter file
              run: |
                echo "replace placeholders using real parameter"
                sed -i "s/#location#/${location}/g; \
                        s/#testbranchName#/${aksRepoBranchName}/g; \
                        s/#gitUserName#/${aksRepoUserName}/g" \
                        cargotracker/src/test/aks/parameters.json
            - name: Archive parameters.json
              uses: actions/upload-artifact@v1
              with:
                name: archivefiles
                path: cargotracker/src/test/aks/parameters.json
            - name: Validate Deploy of Open Liberty Server Cluster Domain offer
              id: validate-openliberty-cluster-deployment
              uses: azure/CLI@v1
              with:
                azcliversion: ${{ env.azCliVersion }}
                inlineScript: |
                    az deployment group validate \
                    --debug \
                    --resource-group ${{ env.resourceGroupForOpenLibertyAks }} \
                    --name openliberty-on-aks \
                    --parameters @cargotracker/src/test/aks/parameters.json \
                    --template-file ${artifactName}/mainTemplate.json
            - name: Deploy Open Liberty Server Cluster Domain offer
              id: deploy-openliberty-cluster
              uses: azure/CLI@v1
              with:
                azcliversion: ${{ env.azCliVersion }}
                inlineScript: |
                    az deployment group create \
                    --verbose \
                    --resource-group ${{ env.resourceGroupForOpenLibertyAks }} \
                    --name openliberty-on-aks \
                    --parameters @cargotracker/src/test/aks/parameters.json \
                    --template-file ${artifactName}/mainTemplate.json
